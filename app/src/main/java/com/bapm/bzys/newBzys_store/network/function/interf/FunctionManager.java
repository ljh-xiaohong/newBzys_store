package com.bapm.bzys.newBzys_store.network.function.interf;import java.util.ArrayList;import java.util.List;import java.util.Map;import org.json.JSONObject;import android.content.Context;import com.bapm.bzys.newBzys_store.network.DadanHandler;import com.bapm.bzys.newBzys_store.network.DadanUrl;import com.bapm.bzys.newBzys_store.network.HttpUtil;public class FunctionManager{	public static final int RETURN_STATUS_SUCCESS = 0;	public static final int RETURN_STATUS_FAIL    = -1;	private List<Class<? extends Function>> functions = new ArrayList<Class<? extends Function>>();	private static FunctionManager instance;	private Context context;	public static synchronized FunctionManager getInstance(Context context){		if(instance == null){			instance = new FunctionManager(context);		}		return instance;	}	public FunctionManager(Context context){		this.context = context;	}	public void registFunClass(Class<? extends Function> cls){		if(functions.contains(cls))			return;		functions.add(cls);	}	public void unregistFunctionClass(Class<? extends Function> cls){		if(functions.contains(cls))			functions.remove(cls);	}	/**	 * 登录	 * @param params	 * @param function	 */	public void login(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.USER_LOGIN_REQUEST_CODE, DadanUrl.OPEN_API_LOGIN_URL, params,new DadanHandler(function,context));		}	}	/**	 * 重新登录	 * @param params	 * @param function	 */	public void loginAgain(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.USER_LOGIN_AGAIN_REQUEST_CODE, DadanUrl.OPEN_API_LOGIN_AGAIN_URL, params,new DadanHandler(function,context));		}	}	/**	 * 退出登录	 * @param params	 * @param function	 */	public void exit(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.EXIT_URL_CODE,DadanUrl.OPEN_API_EXIT_URL, params,new DadanHandler(function,context));		}	}//	/**//	 * 获取店铺信息//	 * @param params//	 * @param function//	 *///	public void getStoreDetail(Map<String, String> params,Function function){//		if(functions.contains(function.getClass())){//			HttpUtil.request(DadanUrl.STORE_DETAIL_URL_CODE,DadanUrl.OPEN_API_STORE_DETAIL_URL, params,new DadanHandler(function,context));//		}//	}	/**	 * 七牛上传凭证	 * @param params	 * @param function	 */	public void token(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.QI_NIU_TOKEN_URL_CODE,DadanUrl.OPEN_API_QI_NIU_TOKEN_URL, params,new DadanHandler(function,context));		}	}	/**	 * 忘记密码验证验证码正确性	 * @param params	 * @param function	 */	public void forget(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.VALIDATE_CODE_URL_CODE,DadanUrl.OPEN_API_VALIDATE_CODE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 忘记密码	 * @param params	 * @param function	 */	public void forgetValidateCode(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.USER_VALIDATE_URL_CODE,DadanUrl.OPEN_API_USER_VALIDATE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 修改密码	 * @param params	 * @param function	 */	public void resetPwd(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.USER_RESET_PWD_URL_CODE,DadanUrl.OPEN_API_USER_RESET_PWD_URL, params,new DadanHandler(function,context));		}	}	/**	 * 获取验证码	 * @param params	 * @param function	 */	public void getCode(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GET_CODE_REQUEST_CODE,DadanUrl.OPEN_API_GET_CODE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 获取验证码	 * @param params	 * @param function	 */	public void updatePwd(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GET_CODE_REQUEST_CODE,DadanUrl.OPEN_API_GET_CODE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商户注册	 * @param params	 * @param function	 */	public void regist(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.STORE_REGIST_URL_CODE,DadanUrl.OPEN_API_STORE_REGIST_URL, params,new DadanHandler(function,context));		}	}	/**	 * 验证验证码	 * @param params	 * @param function	 */	public void validateCode(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GET_CODE_REQUEST_CODE,DadanUrl.OPEN_API_GET_CODE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 子账户列表	 * @param params	 * @param function	 */	public void childList(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.USER_CHILD_LIST_URL_CODE,DadanUrl.OPEN_API_USER_CHILD_LIST_URL, params,new DadanHandler(function,context));		}	}	/**	 * 子账户列表	 * @param params	 * @param function	 */	public void addAccountChild(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.USER_CHILD_ADD_URL_CODE,DadanUrl.OPEN_API_USER_CHILD_ADD_URL, params,new DadanHandler(function,context));		}	}	/**	 * 子账户详细	 * @param params	 * @param function	 */	public void detailAccountChild(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.USER_CHILD_DETAIL_URL_CODE,DadanUrl.OPEN_API_USER_CHILD_DETAIL_URL, params,new DadanHandler(function,context));		}	}	/**	 * 子账户删除	 * @param params	 * @param function	 */	public void delAccountChild(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.USER_CHILD_DEL_URL_CODE,DadanUrl.OPEN_API_USER_CHILD_DEL_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品列表	 * @param params	 * @param function	 */	public void goodsList(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_LIST_URL_CODE,DadanUrl.OPEN_API_GOODS_LIST_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品详细信息	 * @param params	 * @param function	 */	public void goodsDetail(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_DETAIL_URL_CODE,DadanUrl.OPEN_API_GOODS_DETAIL_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品添加	 * @param params	 * @param function	 */	public void addGoods(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_ADD_OR_UPDATE_URL_CODE,DadanUrl.OPEN_API_GOODS_ADD_OR_UPDATE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品添加	 * @param params	 * @param function	 */	public void deleteGoods(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_DELETE_URL_CODE,DadanUrl.OPEN_API_GOODS_DELETE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品交换	 * @param params	 * @param function	 */	public void exchangeGoods(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_SORT_CHANGE_URL_CODE,DadanUrl.OPEN_API_GOODS_SORT_CHANGE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品大类列表	 * @param params	 * @param function	 */	public void goodsTypeList(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_TYPE_LIST_URL_CODE,DadanUrl.OPEN_API_GOODS_TYPE_LIST_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品销售状态字典	 * @param params	 * @param function	 */	public void goodsStatusList(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_DIC_STATUS_URL_CODE,DadanUrl.OPEN_API_GOODS_DIC_STATUS_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品大类添加列表	 * @param params	 * @param function	 */	public void addGoodsType(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_TYPE_ADD_OR_UPDATE_URL_CODE,DadanUrl.OPEN_API_GOODS_TYPE_ADD_OR_UPDATE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品大类删除	 * @param params	 * @param function	 */	public void delGoodsType(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_TYPE_DEL_URL_CODE,DadanUrl.OPEN_API_GOODS_TYPE_DEL_URL, params,new DadanHandler(function,context));		}	}	/**	 * 商品大类交换	 * @param params	 * @param function	 */	public void exchangeGoodType(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GOODS_TYPE_SORT_CHANGE_URL_CODE,DadanUrl.OPEN_API_GOODS_TYPE_SORT_CHANGE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 广告推广列表	 * @param params	 * @param function	 */	public void advertList(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.ADVER_LIST_URL_CODE,DadanUrl.OPEN_API_ADVER_LIST_URL, params,new DadanHandler(function,context));		}	}	/**	 * 广告推广字典	 * @param params	 * @param function	 */	public void advertStatusList(Map<String, String> params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.ADVER_DIC_URL_CODE,DadanUrl.OPEN_API_ADVER_DIC_URL, params,new DadanHandler(function,context));		}	}	/**	 * 广告推广添加	 * @param params	 * @param function	 */	public void addAdvert(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.ADVER_ADD_OR_UPDATE_URL_CODE,DadanUrl.OPEN_API_ADVER_ADD_OR_UPDATE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 广告推广删除	 * @param params	 * @param function	 */	public void delAdvert(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.ADVER_DEL_URL_CODE,DadanUrl.OPEN_API_ADVER_DEL_URL, params,new DadanHandler(function,context));		}	}	/**	 * 反馈与建议	 * @param params	 * @param function	 */	public void commitCompanyFeedback(JSONObject params,Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.COMPANYFEEDBACK_CODE,DadanUrl.OPEN_API_COMPANYFEEDBACK_URL, params,new DadanHandler(function,context));		}	}	/**	 * 获取企业资料	 * @param params	 * @param function	 */	public void getEnterpriseDetail(Map<String, String> params, Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.ENTERPRISE_DETAIL_URL_CODE,DadanUrl.OPEN_API_ENTERPRISE_DETAIL_URL, params,new DadanHandler(function,context));		}	}	/**	 * 获取店铺地址	 * @param params	 * @param function	 */	public void getAddress(Map<String, String> params, Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GET_ADDRESS_CODE,DadanUrl.GET_ADDRESS_URL, params,new DadanHandler(function,context));		}	}	/**	 * 提交修改店铺资料	 * @param params	 * @param function	 */	public void commitStoreDetail(JSONObject params, Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.STORE_DETAIL_COMMIT_CODE,DadanUrl.STORE_DETAIL_COMMIT_URL, params,new DadanHandler(function,context));		}	}	/**	 * 获取推广员列表	 * @param params	 * @param function	 */	public void getadvertList(Map<String, String> params, Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GET_ADVERT_LIST_CODE,DadanUrl.GET_ADVERT_LIST_URL, params,new DadanHandler(function,context));		}	}	/**	 * 获取获取订单信息	 * @param params	 * @param function	 */	public void getOrderList(Map<String, String> params, Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.GET_ORDER_LIST_CODE,DadanUrl.GET_ORDER_LIST_URL, params,new DadanHandler(function,context));		}	}	/**	 * 修改订单详情状态	 * @param params	 * @param function	 */	public void OrderStatusChange(JSONObject params, Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.ORDER_STATUS_CHANGE_CODE,DadanUrl.ORDER_STATUS_CHANGE_URL, params,new DadanHandler(function,context));		}	}	/**	 * 订单收款	 * @param params	 * @param function	 */	public void OrderReceipt(JSONObject params, Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.ORDER_RECEIPT_CODE,DadanUrl.ORDER_RECEIPT_URL, params,new DadanHandler(function,context));		}	}	/**	 * 修改商品销售状态	 * @param params	 * @param function	 */	public void CommodityStatusChange(JSONObject params, Function function){		if(functions.contains(function.getClass())){			HttpUtil.request(DadanUrl.COMMODITY_STATUS_CHANGE_CODE,DadanUrl.COMMODITY_STATUS_CHANGE_URL, params,new DadanHandler(function,context));		}	}}